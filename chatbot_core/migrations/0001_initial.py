# Generated by Django 5.1.5 on 2025-10-05 12:58

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AIConfiguration",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Unique name for this configuration",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        choices=[("openai", "OpenAI"), ("anthropic", "Anthropic")],
                        help_text="AI provider (OpenAI, Anthropic, etc.)",
                        max_length=20,
                    ),
                ),
                (
                    "api_key",
                    models.CharField(
                        help_text="API key for the provider (stored encrypted in production)",
                        max_length=255,
                    ),
                ),
                (
                    "model_name",
                    models.CharField(
                        help_text="Model name (e.g., gpt-4, claude-3-sonnet)",
                        max_length=100,
                    ),
                ),
                (
                    "max_tokens",
                    models.IntegerField(
                        default=500, help_text="Maximum tokens for responses"
                    ),
                ),
                (
                    "temperature",
                    models.FloatField(
                        default=0.7,
                        help_text="Temperature for response generation (0.0-2.0)",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this configuration is currently active",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional provider-specific settings",
                    ),
                ),
            ],
            options={
                "verbose_name": "AI Configuration",
                "verbose_name_plural": "AI Configurations",
                "ordering": ["-is_active", "name"],
            },
        ),
        migrations.CreateModel(
            name="Conversation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "user_phone",
                    models.CharField(
                        db_index=True,
                        help_text="User's phone number in E.164 format (e.g., +14155238886)",
                        max_length=20,
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("last_activity", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Whether this conversation is currently active",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional metadata about the conversation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Conversation",
                "verbose_name_plural": "Conversations",
                "ordering": ["-last_activity"],
                "indexes": [
                    models.Index(
                        fields=["user_phone", "-last_activity"],
                        name="chatbot_cor_user_ph_614b59_idx",
                    ),
                    models.Index(
                        fields=["is_active", "-last_activity"],
                        name="chatbot_cor_is_acti_1b396d_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("user", "User"),
                            ("assistant", "Assistant"),
                            ("system", "System"),
                        ],
                        help_text="Who sent this message",
                        max_length=20,
                    ),
                ),
                ("content", models.TextField(help_text="The message content")),
                ("timestamp", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional metadata (tokens used, model version, etc.)",
                    ),
                ),
                (
                    "conversation",
                    models.ForeignKey(
                        help_text="The conversation this message belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="chatbot_core.conversation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Message",
                "verbose_name_plural": "Messages",
                "ordering": ["timestamp"],
                "indexes": [
                    models.Index(
                        fields=["conversation", "timestamp"],
                        name="chatbot_cor_convers_a284af_idx",
                    ),
                    models.Index(
                        fields=["role", "timestamp"], name="chatbot_cor_role_9a8d71_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="WebhookLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "method",
                    models.CharField(
                        help_text="HTTP method (GET, POST)", max_length=10
                    ),
                ),
                ("path", models.CharField(help_text="Request path", max_length=255)),
                (
                    "headers",
                    models.JSONField(default=dict, help_text="Request headers"),
                ),
                ("body", models.TextField(blank=True, help_text="Request body")),
                (
                    "response_status",
                    models.IntegerField(
                        blank=True, help_text="HTTP response status code", null=True
                    ),
                ),
                (
                    "processing_time_ms",
                    models.IntegerField(
                        blank=True,
                        help_text="Time taken to process the request in milliseconds",
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("success", "Success"),
                            ("error", "Error"),
                            ("pending", "Pending"),
                        ],
                        db_index=True,
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error message if processing failed"
                    ),
                ),
                (
                    "conversation",
                    models.ForeignKey(
                        blank=True,
                        help_text="Associated conversation if applicable",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="webhook_logs",
                        to="chatbot_core.conversation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Webhook Log",
                "verbose_name_plural": "Webhook Logs",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["-timestamp"], name="chatbot_cor_timesta_5ec8f1_idx"
                    ),
                    models.Index(
                        fields=["status", "-timestamp"],
                        name="chatbot_cor_status_1ec89b_idx",
                    ),
                ],
            },
        ),
    ]
